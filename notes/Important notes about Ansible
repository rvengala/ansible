Important Notes
===============
Agent Less Architecture
it require Python
It require ssh on client machines



### Architecture
### 
   Playbooks 
        -> Plays
              -> tasks
                  -> Modules


###
Playbook 
    What - CONFIGS/PKS

    WHERE - Inventory File 
            Ansible/Host file 
              [grp1]
              ip1
             
              [grp2]
              ip2


# Dependet Packages for Ansible
# -----------------------------
- Python
- Ninja2
- Disable Selinux - sestatus/ 
- libselinux-python


# Install Ansible
# ---------------
yum install epel-release -y
yum install ansible tree -y
yum -y install ntp wget dos2unix curl bind-utils telnet vim lsof unzip net-tools nmap


# Setup SSH passprase less
---------------------------
# ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa 2>/dev/null <<< y >/dev/null
ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa
cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
Note : make sue ssh password less setup

# Important Conf:
# ---------------
vim /etc/ansible/hosts        ## Should add groups and Slave host information
   add below lines at end of the files (o not delete defauls)
   [clients]
   client1.infoftps.com
   client2.infoftps.com

##### Important Commands
ansible appgroup -m ping
ansible dbgroup -m ping
ansible all -m ping
ansible all -m ping -o        // -o ( -o, --one-line )   -b become/sudo   -k ??
ansible -b -K -m user  ?????
ansible -m service sshh 
ansible -m setup all
ansible -m ping clients  //#  ansible -m ping <group name>
ansible appgroup -m ping 
ansible cllients -m ping 


# get information modules
ansible-doc -l
ansible-doc -s
ansible-doc copy

# Shell Commands
ansible all -m shell -a "uname -a; df -h"
ansible all -m shell -a "uname -a; df -h" -v    //-v verbos
ansible all -m shell -a "yum install nmap -y" 

# command module 
ansible -m command -a "uptime" clients
ansible -m command  -a  "df -h" clients
ansible clients -m command  -a  "df -h"
ansible clients -m shell -a "uname -a; df -h"
ansible  -m shell -a "uname -a; df -h" clients
ansible -a "df -h" clients  -m command
ansible -m user -a "name=user1 password=password1" clients

#Setup 
ansible clients -m setup
ansible clients -m setup -a "filter=ansible_user"

# Install http package, -s means sudo
ansible appgroup -m yum -a "name=httpd state=present" -s

# Install http package, -s means sudo
ansible appgroup -m service -a "name=httpd state=started" -s

# Install http package, -s means sudo
ansible all -m yum -a "name=nmap state=present" -s    //Install nmap

# Install http package, -s means sudo
ansible all -m yum -a "name=libselinux-python state=present" -s

# Copy file http package, -s means sudo
ansible all -m copy -a "src=/tmp/testingfile dest=/tmp/testingfile" -s

# Change Permissions - file, -s means sudo
ansible all -m file -a ****

####


About Ansible Playbooks
=======================
 -- inside playbooks -> modules
            
            Configs 
            commands
            
            roles:
               Dev
 
About Ansible Roles
===================
# Roles ain Ansible ate next level of abstaraction of ansible playbooks
# Benfit 
      - 
      
# Strusture 
files          : Containins regular files those need to copied to the target hosts
handlers       : Event handlers 
meta           : Role Dependencies 
templates      : Similar to files, but it contains dynamic data
tasks          : playbook tasks
var/group_vars : variables definations

   Roles
      Dev
         Task
              MAIN.YAML
              
 Should playbook to call any roles, roles can't run independntly

Ansible Host FOlder  -> Roles -> Role-Name    -> Defaults
                                              -> vars
                                              -> Hanglers
                                              -> Tasks
                                              -> files
                                              -> Meta
                                              -> templates





###
# ansible-galaxy
      Usage: ansible-galaxy [delete|import|info|init|install|list|login|remove|search|setup] [--help] [options] ...

      Options:
        -h, --help            show this help message and exit
        -c, --ignore-certs    Ignore SSL certificate validation errors.
        -s API_SERVER, --server=API_SERVER
                              The API server destination
        -v, --verbose         verbose mode (-vvv for more, -vvvv to enable
                              connection debugging)
        --version             show program's version number and exit

       See 'ansible-galaxy <command> --help' for more information on a specific
      command.

cd /etc/ansible/roles 
ansible-galaxy init devrole
      - devrole was created successfully

cd /etc/ansible/roles ; ls
     devrole
cd devrole/ ; ll
      total 4
      drwxr-xr-x. 2 root root   22 Apr  1 00:31 defaults
      drwxr-xr-x. 2 root root    6 Apr  1 00:31 files
      drwxr-xr-x. 2 root root   22 Apr  1 00:31 handlers
      drwxr-xr-x. 2 root root   22 Apr  1 00:31 meta
      -rw-r--r--. 1 root root 1328 Apr  1 00:31 README.md
      drwxr-xr-x. 2 root root   22 Apr  1 00:31 tasks
      drwxr-xr-x. 2 root root    6 Apr  1 00:31 templates
      drwxr-xr-x. 2 root root   39 Apr  1 00:31 tests
      drwxr-xr-x. 2 root root   22 Apr  1 00:31 vars




Run Ansible 
============
ansible-playbook httpd_playbook.yml
ansible-playbook --check httpd_playbook.yml


## Example 1 : Install httpd
----------------------------
cd /etc/ansible

cat httpd_playbook.yml
---
- hosts: all
  become: true
  become_user: root
  tasks:
  - name: install httpd package
    yum: name=httpd state=present
  - name: start the service
    service: name=httpd state=restarted
 
 RUN : ansible-playbook --check httpd_playbook.yml
 
 
##  Example 2 : 
----------------
#
mkdir webstack;cd webstack
mkdir group_vars; cd group_vars; touch group_vars/all

cat group_vars/all
---

dnsserver: 192.168.0.110
ntpserver: 8.8.8.8

# 
cd webstack; touch hosts

# 
cd webstack; touch main.yaml

#
cat tasks/main.yaml
---

- name: Configuration DNS Client
  template: src=resolv.conf dest=/etc/resolv.conf
  tags: dns
  
- name: Install NTP Service 
  yum: name=ntp state=present
  tags: dns

- name: Copy ntp file
  template: src=ntp.conf dest=/etc/ntp.conf
  tags: ntp
  notify: restart ntp service


mkdir -p webstack/roles/common/tasks;cd /roles/common/tasks;
cat main.yml
---

- name: Configuration DNS Client 
  template: src=resolve.conf dest=/etc/resoolv.conf
  tags: dns

- name: Install ntp 
  yum: name=ntp state=present 
  tags: ntp

- name: Copy ntp file
  template: erc=ntp.conf dest=/etc/ntp.conf
  tags: ntp 
  notify: restart ntp service
  
  





